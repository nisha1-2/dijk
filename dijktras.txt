#include <iostream>
#include<climits>
using namespace std;
int mindist(int distance[],bool Tset[])
{
    int minimum = INT_MAX,ind;
    for(int k=0;k<6;k++)
    {
        if(Tset[k]==false && distance[k]<=minimum)
        {
            minimum=distance[k];
            ind=k;
        }

    }
    return ind;
}
void dijalgo(int graf[6][6],int src)
{
    int distance[6];
    bool Tset[6];
    for(int k=0;k<6;k++)
    {
        distance[k]=INT_MAX;
        Tset[k]=false;
    }
    distance[src]=0;
    for(int k=0;k<6;k++)
    {
        int m=mindist(distance,Tset);
        Tset[m]=true;
        for(int k=0;k<6;k++)
        {
            if(!Tset[k]&&graf[m][k]&&distance[m]!=INT_MAX&&distance[m]+graf[m][k]<distance[k] )
                distance[k]=distance[m]+graf[m][k];
        }
    }
    cout<<"vertex \t\t distance from source"<<endl;
    for(int k=0;k<6;k++)
    {
        char str=65+k;
        cout<<str<<"\t\t"<<distance[k]<<endl;
    }

}
int main()
{
    int i;
    int graf[6][6]={{0, 1, 2, 0, 0, 0},
        {1, 0, 0, 5, 1, 0},
        {2, 0, 0, 2, 3, 0},
        {0, 5, 2, 0, 2, 2},
        {0, 1, 3, 2, 0, 1},
        {0, 0, 0, 2, 1, 0}};
        for(int i=0;i<6;i++)
           dijalgo(graf,i);
    return 0;
}
